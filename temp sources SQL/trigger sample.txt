CREATE OR REPLACE FUNCTION transfer_supply() RETURNS TRIGGER AS $$
BEGIN
IF TG_OP = 'INSERT' THEN
INSERT INTO public."Warehouse" (ws_id)
VALUES (NEW.sp_id);

ELSIF TG_OP = 'DELETE' THEN
DELETE FROM public."Warehouse"
WHERE ws_id = OLD.sp_id;

END IF;
RETURN NEW;
END;
$$ LANGUAGE plpgsql;

CREATE TRIGGER supply_trigger
AFTER INSERT OR DELETE ON public."Supply"
FOR EACH ROW
EXECUTE FUNCTION transfer_supply();



CREATE OR REPLACE FUNCTION transfer_product() RETURNS TRIGGER AS $$
BEGIN
IF TG_OP = 'INSERT' THEN
INSERT INTO public."Warehouse" (wp_id)
VALUES (NEW.p_id);

ELSIF TG_OP = 'DELETE' THEN
DELETE FROM public."Warehouse"
WHERE wp_id = OLD.p_id;

END IF;
RETURN NEW;
END;
$$ LANGUAGE plpgsql;

CREATE TRIGGER supply_trigger
AFTER INSERT OR DELETE ON public."Product"
FOR EACH ROW
EXECUTE FUNCTION transfer_supply();